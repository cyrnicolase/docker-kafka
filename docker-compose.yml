version: "3"
services:
  # zookeeper 节点
  zk0:
    container_name: c-zookeeper0
    build: 
      context: ./zookeeper
    networks:
      - kafka-network
    volumes:
      - ./zookeeper/configs/zk0/myid:/data/zookeeper/myid
      - ./zookeeper/configs/zk0:/zookeeper/conf
    command: ["/zookeeper/bin/zkServer.sh", "start-foreground"]
  zk1:
    container_name: c-zookeeper1
    build: 
      context: ./zookeeper
    networks:
      - kafka-network
    volumes:
      - ./zookeeper/configs/zk1/myid:/data/zookeeper/myid
      - ./zookeeper/configs/zk1:/zookeeper/conf
    command: ["/zookeeper/bin/zkServer.sh", "start-foreground"]

  # kafka节点
  kafka0:
    container_name: c-kafka0
    depends_on: 
      - zk0
      - zk1
    build: 
      context: ./kafka
    networks:
      - kafka-network
    volumes:
      - ./kafka/configs/kafka0:/kafka/config
    command: ["/kafka/bin/kafka-server-start.sh", "/kafka/config/server.properties"]
  kafka1:
    container_name: c-kafka1
    depends_on: 
      - zk0
      - zk1
    build: 
      context: ./kafka
    networks:
      - kafka-network
    volumes:
      - ./kafka/configs/kafka1:/kafka/config
    command: ["/kafka/bin/kafka-server-start.sh", "/kafka/config/server.properties"]
  kafka2:
    container_name: c-kafka2
    depends_on: 
      - zk0
      - zk1
    build:
      context: ./kafka
    networks:
      - kafka-network
    volumes:
      - ./kafka/configs/kafka2:/kafka/config
    command: ["/kafka/bin/kafka-server-start.sh", "/kafka/config/server.properties"]

  # 自定义桥接网络
networks:
  kafka-network:
    driver: bridge
